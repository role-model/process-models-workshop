  output-dir: docs

# Getting started with the MESS model

## Key questions

1. How do I set up and run a MESS simulation?
1. What are the inputs and outputs of MESS?
1. What happens when a MESS model runs?
1. How do I view and interpret the results of a MESS simulation?

## Lesson objectives

After this lesson, learners should be able to...

1. Describe the basic workflow of running a MESS simulation.
1. Create and edit a MESS params file, including setting ranges on parameters.
1. Identify the 4 most important MESS parameters
1. Use the command line to run a basic MESS model.
1. Describe and interpret the basic outputs of a MESS model.

## Planned exercises

1. Hands-on: Exploring MESS model behavior with the CLI

* Installation
* TL;DR Run your first simulations
* Getting started with roleR
* Creating a roleParams object and setting model parameters
* Run simulations using the new roleParams
* Inspect the output of the simulation runs
* Setting prior ranges on parameters
* Experimentation time (set a challenge and report back?)

### Installing MESS

:::(.callout-note}
Because we are using the self-contained and pre-instaled docker image, you do
not need to install anything for this workshop, rather installation instructions
are included for completeness and future information should you wish to install
MESS on your home cluster.
:::

The most current implementation of the MESS model is included in the `iBioGen`
package, which is hosted on the
[iBioGen github](https://github.com/iBioGen/iBioGen) and installable either
using `conda` or the `remotes` R package. Conda is the preferred method, but
really either should work.

#### Install from a terminal with conda

First install [conda](https://docs.conda.io/en/latest/miniconda.html) and then:

```bash
conda create -n iBioGen python=3.10
conda activate iBioGen
conda install -c conda-forge -c ibiogen ibiogen
```

#### R install using remotes::install_github
```r
> install.packages("remotes")
> library(remotes)
> remotes::install_github('iBioGen/iBioGen')
```

::: {.callout-tip collapse="true"}
## Why do you keep calling it MESS when we're installing iBioGen?

Good question! Think of MESS as the _idea_ or the concept and iBioGen as the
implentation. It's the same relationship between the concept/idea of a car
and an actual Honda or Ford, they're both complicated machines made of tons
of small parts that do the same job in slighly different ways.

The underlying implementation of iBioGen is python, but we are also working
on an implementation of MESS in R which is called `roleR`. roleR and iBioGen
are both complicated software programs made of tons of small parts that implement
the _idea_ of the MESS model in slightly different ways. For the purpose of this
workshop, because we are interested in the **model** and not the implementation,
we will prefer to refer to it as `MESS`, in most cases.
:::


## Key points

* What is the relationship between MESS, RoLE, and iBioGen?
_List 1-3 key takeaways from this section of the workshop._
